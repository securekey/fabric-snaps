// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peers.proto

/*
Package membership is a generated protocol buffer package.

It is generated from these files:
	peers.proto

It has these top-level messages:
	PeerEndpoint
	PeerEndpoints
*/
package membership

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// PeerEndpoint contains the preferred endpoint of a peer
type PeerEndpoint struct {
	Endpoint     string `protobuf:"bytes,1,opt,name=Endpoint" json:"Endpoint,omitempty"`
	MSPid        []byte `protobuf:"bytes,2,opt,name=MSPid,proto3" json:"MSPid,omitempty"`
	LedgerHeight uint64 `protobuf:"varint,3,opt,name=ledger_height,json=ledgerHeight" json:"ledger_height,omitempty"`
	LeftChannel  bool   `protobuf:"varint,4,opt,name=left_channel,json=leftChannel" json:"left_channel,omitempty"`
}

func (m *PeerEndpoint) Reset()                    { *m = PeerEndpoint{} }
func (m *PeerEndpoint) String() string            { return proto.CompactTextString(m) }
func (*PeerEndpoint) ProtoMessage()               {}
func (*PeerEndpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PeerEndpoint) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *PeerEndpoint) GetMSPid() []byte {
	if m != nil {
		return m.MSPid
	}
	return nil
}

// PeerEndpoints contains a list of peer endpoints
type PeerEndpoints struct {
	Endpoints []*PeerEndpoint `protobuf:"bytes,1,rep,name=Endpoints" json:"Endpoints,omitempty"`
}

func (m *PeerEndpoints) Reset()                    { *m = PeerEndpoints{} }
func (m *PeerEndpoints) String() string            { return proto.CompactTextString(m) }
func (*PeerEndpoints) ProtoMessage()               {}
func (*PeerEndpoints) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PeerEndpoints) GetEndpoints() []*PeerEndpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func init() {
	proto.RegisterType((*PeerEndpoint)(nil), "api.PeerEndpoint")
	proto.RegisterType((*PeerEndpoints)(nil), "api.PeerEndpoints")
}

func init() { proto.RegisterFile("peers.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xd0, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x86, 0x61, 0x99, 0x14, 0xd4, 0x3a, 0xe9, 0x80, 0xc5, 0x60, 0x31, 0x99, 0xb2, 0x78, 0x21,
	0x96, 0xe0, 0x02, 0xf8, 0x13, 0x12, 0x0b, 0x52, 0x65, 0x36, 0x96, 0xca, 0x49, 0x4e, 0xe3, 0x23,
	0x12, 0xc7, 0xb2, 0xdd, 0x81, 0x3b, 0xe0, 0xb2, 0x51, 0x1b, 0xd1, 0x66, 0xf3, 0xfb, 0xe8, 0x1b,
	0xac, 0x43, 0x73, 0x0f, 0x10, 0x62, 0xe9, 0xc3, 0x90, 0x06, 0x96, 0x19, 0x8f, 0xab, 0x5f, 0x42,
	0x8b, 0x35, 0x40, 0x78, 0x73, 0x8d, 0x1f, 0xd0, 0x25, 0x76, 0x4d, 0xe7, 0xff, 0x6f, 0x4e, 0x04,
	0x91, 0x0b, 0x7d, 0x6c, 0x76, 0x45, 0xcf, 0x3f, 0x3e, 0xd7, 0xd8, 0xf0, 0x33, 0x41, 0x64, 0xa1,
	0xc7, 0x60, 0xb7, 0x74, 0xd9, 0x41, 0xd3, 0x42, 0xd8, 0x58, 0xc0, 0xd6, 0x26, 0x9e, 0x09, 0x22,
	0x67, 0xba, 0x18, 0xf1, 0xfd, 0x60, 0xec, 0x86, 0x16, 0x1d, 0x6c, 0xd3, 0xa6, 0xb6, 0xc6, 0x39,
	0xe8, 0xf8, 0x4c, 0x10, 0x39, 0xd7, 0xf9, 0xde, 0x5e, 0x47, 0x5a, 0x3d, 0xd1, 0xe5, 0xf4, 0x27,
	0x91, 0x29, 0xba, 0x38, 0x06, 0x27, 0x22, 0x93, 0xf9, 0xfd, 0x65, 0x69, 0x3c, 0x96, 0xd3, 0x99,
	0x3e, 0x6d, 0x5e, 0x9e, 0xbf, 0x1e, 0x5b, 0x4c, 0x76, 0x57, 0x95, 0xf5, 0xd0, 0xab, 0x08, 0xf5,
	0x2e, 0xc0, 0x37, 0xfc, 0xa8, 0xad, 0xa9, 0x02, 0xd6, 0x77, 0xd1, 0x19, 0x1f, 0x55, 0x0f, 0x7d,
	0x05, 0x21, 0x5a, 0xf4, 0xfb, 0x56, 0xc6, 0xe3, 0x84, 0xaa, 0x8b, 0xc3, 0x6d, 0x1e, 0xfe, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x93, 0xd4, 0x18, 0xa4, 0x2a, 0x01, 0x00, 0x00,
}
