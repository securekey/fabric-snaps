#############################################################################
#   This is a configuration file for the fabric-ca-client command.
#
#   COMMAND LINE ARGUMENTS AND ENVIRONMENT VARIABLES
#   ------------------------------------------------
#   Each configuration element can be overridden via command line
#   arguments or environment variables.  The precedence for determining
#   the value of each element is as follows:
#   1) command line argument
#      Examples:
#      a) --url https://localhost:7054
#         To set the fabric-ca server url
#      b) --tls.client.certfile certfile.pem
#         To set the client certificate for TLS
#   2) environment variable
#      Examples:
#      a) FABRIC_CA_CLIENT_URL=https://localhost:7054
#         To set the fabric-ca server url
#      b) FABRIC_CA_CLIENT_TLS_CLIENT_CERTFILE=certfile.pem
#         To set the client certificate for TLS
#   3) configuration file
#   4) default value (if there is one)
#      All default values are shown beside each element below.
#
#   FILE NAME ELEMENTS
#   ------------------
#   The value of all fields whose name ends with "file" or "files" are
#   name or names of other files.
#   For example, see "tls.certfiles" and "tls.client.certfile".
#   The value of each of these fields can be a simple filename, a
#   relative path, or an absolute path.  If the value is not an
#   absolute path, it is interpretted as being relative to the location
#   of this configuration file.
#
#############################################################################
#############################################################################
# Client Configuration
#############################################################################
# URL of the Fabric-ca-server (default: http://localhost:7054)
url: http://localhost:17054
# Membership Service Provider (MSP) directory
# This is useful when the client is used to enroll a peer or orderer, so
# that the enrollment artifacts are stored in the format expected by MSP.
mspdir:
#############################################################################
#    TLS section for secure socket connection
#
#  certfiles - PEM-encoded list of trusted root certificate files
#  client:
#    certfile - PEM-encoded certificate file for when client authentication
#    is enabled on server
#    keyfile - PEM-encoded key file for when client authentication
#    is enabled on server
#############################################################################
tls:
  # TLS section for secure socket connection
  certfiles:
  client:
    certfile:
    keyfile:
#############################################################################
#  Certificate Signing Request section for generating the CSR for
#  an enrollment certificate (ECert)
#
#  cn - Used by CAs to determine which domain the certificate is to be generated for
#  names -  A list of name objects. Each name object should contain at least one
#  "C", "L", "O", "OU", or "ST" value (or any combination of these). These values are:
#      "C": country
#      "L": locality or municipality (such as city or town name)
#      "O": organisation
#      "OU": organisational unit, such as the department responsible for owning the key;
#      it can also be used for a "Doing Business As" (DBS) name
#      "ST": the state or province
#  hosts - A list of space-separated host names which the certificate should be valid for
#
#  NOTE: The serialnumber field below, if specified, becomes part of the issued
#  certificate's DN (Distinquished Name).  For example, one use case for this is
#  a company with its own CA (Certificate Authority) which issues certificates
#  to its employees and wants to include the employee's serial number in the DN
#  of its issued certificates.
#
#  WARNING: This serialnumber field should not be confused with the certificate's
#  serial number which is set by the CA but is not a component of the
#  certificate's DN.
#############################################################################
csr:
  cn: client-test.fabric.linuxctl.com
  serialnumber:
  names:
    - C: US
      ST: North Carolina
      L:
      O: Hyperledger
      OU: Fabric
  hosts:
    - client-test.fabric.linuxctl.com
  ca:
    pathlen:
    pathlenzero:
    expiry:
#############################################################################
#  Registration section used to register a new identity with fabric-ca server
#
#  name - Unique name of the identity
#  type - Type of identity being registered (e.g. 'peer, app, user')
#  affiliation - The identity's affiliation
#  maxenrollments - The maximum number of times the secret can be reused to enroll.
#                   Specially, -1 means unlimited; 0 means disabled
#  attributes - List of name/value pairs of attribute for identity
#############################################################################
id:
  name:
  type:
  affiliation:
  maxenrollments: -1
  attributes:
    - name:
      value:
#############################################################################
#  Enrollment section used to enroll an identity with fabric-ca server
#
#  profile - Name of the signing profile to use in issuing the certificate
#  label - Label to use in HSM operations
#############################################################################
enrollment:
  profile:
  label:
#############################################################################
# Name of the CA to connect to within the fabric-ca server
#############################################################################
caname:
#############################################################################
# BCCSP (BlockChain Crypto Service Provider) section allows to select which
# crypto implementation library to use
#############################################################################
BCCSP:
    Default: PKCS11
    SW:
        # TODO: The default Hash and Security level needs refactoring to be
        # fully configurable. Changing these defaults requires coordination
        # SHA2 is hardcoded in several places, not only BCCSP
        Hash: SHA2
        Security: 256
        # Location of Key Store
        FileKeyStore:
            # If "", defaults to 'mspConfigPath'/keystore
            # TODO: Ensure this is read with fabric/core/config.GetPath() once ready
            KeyStore:
    PKCS11:
      Library: /usr/lib/x86_64-linux-gnu/softhsm/libsofthsm2.so
      Label: ForFabric
      Pin: '98765432'
      SensitiveKeys: true
      Ephemeral: false
      SoftwareVerify: true
      Hash: SHA2
      Security: 256
      FileKeyStore:
        # The directory used for the software file-based keystore
        KeyStore: /tmp/keystore
