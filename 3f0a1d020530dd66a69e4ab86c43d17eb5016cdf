{
  "comments": [
    {
      "key": {
        "uuid": "bde129a2_8c3599b8",
        "filename": "configurationsnap/cmd/configurationscc/configurationscc.go",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000058
      },
      "writtenOn": "2018-07-25T14:40:00Z",
      "side": 1,
      "message": "errors package is more meaningful than util",
      "range": {
        "startLine": 90,
        "startChar": 10,
        "endLine": 90,
        "endChar": 14
      },
      "revId": "3f0a1d020530dd66a69e4ab86c43d17eb5016cdf",
      "serverId": "391e9dfb-4ca7-4d02-9d3e-c661eec85686",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e0426ad_a005380f",
        "filename": "configurationsnap/cmd/configurationscc/configurationscc.go",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000038
      },
      "writtenOn": "2018-07-25T14:57:54Z",
      "side": 1,
      "message": "I doesn\u0027t belong to errors package since this is stub/shim specific. Probably common makes more sense than util. What do you think? We already had errors under util. Should I move it to util/common and than we would have common.CreateShimResponseFromError?",
      "parentUuid": "bde129a2_8c3599b8",
      "range": {
        "startLine": 90,
        "startChar": 10,
        "endLine": 90,
        "endChar": 14
      },
      "revId": "3f0a1d020530dd66a69e4ab86c43d17eb5016cdf",
      "serverId": "391e9dfb-4ca7-4d02-9d3e-c661eec85686",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5041891_6bb27a1b",
        "filename": "configurationsnap/cmd/configurationscc/configurationscc.go",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000058
      },
      "writtenOn": "2018-07-25T15:51:48Z",
      "side": 1,
      "message": "what I meant was golang best practice states to use \"meaningful and clear naming\", in this case util (even common) are too generic.\n\nsee this slide: https://talks.golang.org/2014/names.slide#15\n\nsince this is a utility to get a response from an errors, it would make sense to simply do error.functionName.. maybe the function name can change? like errors.NewResponse() ?",
      "parentUuid": "7e0426ad_a005380f",
      "range": {
        "startLine": 90,
        "startChar": 10,
        "endLine": 90,
        "endChar": 14
      },
      "revId": "3f0a1d020530dd66a69e4ab86c43d17eb5016cdf",
      "serverId": "391e9dfb-4ca7-4d02-9d3e-c661eec85686",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46ac867c_48b2283e",
        "filename": "configurationsnap/cmd/configurationscc/configurationscc.go",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000058
      },
      "writtenOn": "2018-07-25T16:00:56Z",
      "side": 1,
      "message": "I see what you mean by not belonging to errors package.. the package name is tricky as this can be used by any snap... not sure how to create a meaningful name for common code, maybe call it \u0027shim-util\u0027 ? if we don\u0027t figure out a name.. then it\u0027s fine.",
      "parentUuid": "c5041891_6bb27a1b",
      "range": {
        "startLine": 90,
        "startChar": 10,
        "endLine": 90,
        "endChar": 14
      },
      "revId": "3f0a1d020530dd66a69e4ab86c43d17eb5016cdf",
      "serverId": "391e9dfb-4ca7-4d02-9d3e-c661eec85686",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b9a6d64_27ead95e",
        "filename": "membershipsnap/cmd/membershipsnap.go",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1000058
      },
      "writtenOn": "2018-07-25T14:40:00Z",
      "side": 1,
      "message": "it is preferable to move the function under the \u0027errors\u0027 package as \u0027util\u0027 is too generic",
      "range": {
        "startLine": 91,
        "startChar": 9,
        "endLine": 91,
        "endChar": 13
      },
      "revId": "3f0a1d020530dd66a69e4ab86c43d17eb5016cdf",
      "serverId": "391e9dfb-4ca7-4d02-9d3e-c661eec85686",
      "unresolved": true
    }
  ]
}