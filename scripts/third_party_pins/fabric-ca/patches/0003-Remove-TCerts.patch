From d69b37eb3a14ea69cfc5876510d5d5915299b045 Mon Sep 17 00:00:00 2001
From: Troy Ronda <t.....@securekey.com>
Date: Mon, 25 Sep 2017 12:20:13 -0400
Subject: [PATCH] Remove TCerts

Copyright SecureKey Technologies Inc. All Rights Reserved.
SPDX-License-Identifier: Apache-2.0

Signed-off-by: Troy Ronda <t.....@securekey.com>
---
 api/client.go   | 31 -------------------------------
 api/net.go      | 15 ---------------
 lib/identity.go | 16 ----------------
 3 files changed, 62 deletions(-)

diff --git a/api/client.go b/api/client.go
index af415b7..d6a4513 100644
--- a/api/client.go
+++ b/api/client.go
@@ -17,10 +17,7 @@ limitations under the License.
 package api
 
 import (
-	"time"
-
 	"github.com/cloudflare/cfssl/csr"
-	"github.com/hyperledger/fabric-ca/lib/tcert"
 )
 
 // RegistrationRequest for a new identity
@@ -103,34 +100,6 @@ type RevocationRequest struct {
 	CAName string `json:"caname,omitempty" skip:"true"`
 }
 
-// GetTCertBatchRequest is input provided to identity.GetTCertBatch
-type GetTCertBatchRequest struct {
-	// Number of TCerts in the batch.
-	Count int `json:"count"`
-	// The attribute names whose names and values are to be sealed in the issued TCerts.
-	AttrNames []string `json:"attr_names,omitempty"`
-	// EncryptAttrs denotes whether to encrypt attribute values or not.
-	// When set to true, each issued TCert in the batch will contain encrypted attribute values.
-	EncryptAttrs bool `json:"encrypt_attrs,omitempty"`
-	// Certificate Validity Period.  If specified, the value used
-	// is the minimum of this value and the configured validity period
-	// of the TCert manager.
-	ValidityPeriod time.Duration `json:"validity_period,omitempty"`
-	// The pre-key to be used for key derivation.
-	PreKey string `json:"prekey"`
-	// DisableKeyDerivation if true disables key derivation so that a TCert is not
-	// cryptographically related to an ECert.  This may be necessary when using an
-	// HSM which does not support the TCert's key derivation function.
-	DisableKeyDerivation bool `json:"disable_kdf,omitempty"`
-	// CAName is the name of the CA to connect to
-	CAName string `json:"caname,omitempty" skip:"true"`
-}
-
-// GetTCertBatchResponse is the return value of identity.GetTCertBatch
-type GetTCertBatchResponse struct {
-	tcert.GetBatchResponse
-}
-
 // GetCAInfoRequest is request to get generic CA information
 type GetCAInfoRequest struct {
 	CAName string `json:"caname,omitempty" skip:"true"`
diff --git a/api/net.go b/api/net.go
index 20c5d1e..cbd7456 100644
--- a/api/net.go
+++ b/api/net.go
@@ -18,7 +18,6 @@ package api
 
 import (
 	"github.com/cloudflare/cfssl/signer"
-	"github.com/hyperledger/fabric-ca/lib/tcert"
 )
 
 /*
@@ -60,20 +59,6 @@ type RevocationRequestNet struct {
 	RevocationRequest
 }
 
-// GetTCertBatchRequestNet is a network request for a batch of transaction certificates
-type GetTCertBatchRequestNet struct {
-	GetTCertBatchRequest
-	// KeySigs is an optional array of public keys and corresponding signatures.
-	// If not set, the server generates it's own keys based on a key derivation function
-	// which cryptographically relates the TCerts to an ECert.
-	KeySigs []KeySig `json:"key_sigs,omitempty"`
-}
-
-// GetTCertBatchResponseNet is the network response for a batch of transaction certificates
-type GetTCertBatchResponseNet struct {
-	tcert.GetBatchResponse
-}
-
 // KeySig is a public key, signature, and signature algorithm tuple
 type KeySig struct {
 	// Key is a public key
diff --git a/lib/identity.go b/lib/identity.go
index 8260c72..169e1d1 100644
--- a/lib/identity.go
+++ b/lib/identity.go
@@ -63,22 +63,6 @@ func (i *Identity) GetECert() *Signer {
 	return i.ecert
 }
 
-// GetTCertBatch returns a batch of TCerts for this identity
-func (i *Identity) GetTCertBatch(req *api.GetTCertBatchRequest) ([]*Signer, error) {
-	reqBody, err := util.Marshal(req, "GetTCertBatchRequest")
-	if err != nil {
-		return nil, err
-	}
-	err = i.Post("tcert", reqBody, nil)
-	if err != nil {
-		return nil, err
-	}
-	// Ignore the contents of the response for now.  They will be processed in the future when we need to
-	// support the Go SDK.   We currently have Node and Java SDKs which process this and they are the
-	// priority.
-	return nil, nil
-}
-
 // Register registers a new identity
 // @param req The registration request
 func (i *Identity) Register(req *api.RegistrationRequest) (rr *api.RegistrationResponse, err error) {
-- 
2.14.1

